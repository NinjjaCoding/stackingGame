{"mappings":"AACA,MAAM,CAAC,KAAK,GAAI,CAAkC,AAAlC,EAAkC,AAAlC,gCAAkC;AAElD,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAE,CAAkB,AAAlB,EAAkB,AAAlB,gBAAkB;AAC/C,GAAG,CAAC,KAAK,CAAE,CAA+D,AAA/D,EAA+D,AAA/D,6DAA+D;AAC1E,GAAG,CAAC,QAAQ,CAAE,CAA8B,AAA9B,EAA8B,AAA9B,4BAA8B;AAC5C,GAAG,CAAC,KAAK,CAAE,CAA8C,AAA9C,EAA8C,AAA9C,4CAA8C;AACzD,GAAG,CAAC,SAAS,CAAE,CAAmC,AAAnC,EAAmC,AAAnC,iCAAmC;AAClD,KAAK,CAAC,SAAS,GAAG,CAAC,CAAE,CAAuB,AAAvB,EAAuB,AAAvB,qBAAuB;AAC5C,KAAK,CAAC,eAAe,GAAG,CAAC,CAAE,CAAqC,AAArC,EAAqC,AAArC,mCAAqC;AAChE,GAAG,CAAC,SAAS;AACb,GAAG,CAAC,SAAS;AACb,GAAG,CAAC,cAAc,CAAE,CAAkD,AAAlD,EAAkD,AAAlD,gDAAkD;AAEtE,KAAK,CAAC,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAO;AACpD,KAAK,CAAC,mBAAmB,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAc;AAClE,KAAK,CAAC,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,CAAS;AAExD,EAAqB,AAArB,mBAAqB;AACrB,IAAI;AAEJ,EAAkD,AAAlD,gDAAkD;SACzC,iBAAiB,GAAG,CAAC;IAC5B,cAAc,GAAG,IAAI,CAAC,MAAM,KAAK,CAAC,GAAG,GAAG;AAC1C,CAAC;SAEQ,IAAI,GAAG,CAAC;IACf,SAAS,GAAG,IAAI;IAChB,SAAS,GAAG,KAAK;IACjB,QAAQ,GAAG,CAAC;IACZ,KAAK,GAAG,CAAC,CAAC;IACV,SAAS,GAAG,CAAC,CAAC;IACd,iBAAiB;IAEjB,EAAsB,AAAtB,oBAAsB;IACtB,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,KAAK;IACxB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,CAAC,EAAG,CAA4B,AAA5B,EAA4B,AAA5B,0BAA4B;IAC1D,KAAK,CAAC,UAAU,GAAG,GAAG,CAAC,MAAM,CAAC,eAAe;IAC7C,KAAK,CAAC,MAAM,CAAC,UAAU,GAAG,EAAE;IAE5B,EAAqB,AAArB,mBAAqB;IACrB,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW;IACrD,KAAK,CAAC,KAAK,GAAG,EAAE;IAChB,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM;IAE7B,MAAM,GAAG,GAAG,CAAC,KAAK,CAAC,kBAAkB,CACnC,KAAK,GAAG,EAAE,EACV,KAAK,GAAG,CAAC,EACT,MAAM,GAAG,CAAC,EACV,MAAM,GAAG,EAAE,EACX,CAAC,EACD,GAAG,AAAC,CAAY,AAAZ,EAAY,AAAZ,UAAY;;IAGlB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IAErB,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK;IAEvB,EAA0B,AAA1B,wBAA0B;IAC1B,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,eAAe;IAE/C,EAAc,AAAd,YAAc;IACd,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAG;IAEtD,EAA8B,AAA9B,4BAA8B;IAC9B,KAAK,CAAC,YAAY,GAAG,GAAG,CAAC,KAAK,CAAC,YAAY,CAAC,QAAQ,EAAE,GAAG;IACzD,KAAK,CAAC,GAAG,CAAC,YAAY;IAEtB,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,gBAAgB,CAAC,QAAQ,EAAE,GAAG;IACzD,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC;IAC/B,KAAK,CAAC,GAAG,CAAC,QAAQ;IAElB,EAAkB,AAAlB,gBAAkB;IAClB,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;QAAC,SAAS,EAAE,IAAI;IAAC,CAAC;IACtD,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW;IACtD,QAAQ,CAAC,gBAAgB,CAAC,SAAS;IACnC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,UAAU;AAC/C,CAAC;SAEQ,SAAS,GAAG,CAAC;IACpB,SAAS,GAAG,KAAK;IACjB,SAAS,GAAG,KAAK;IACjB,QAAQ,GAAG,CAAC;IACZ,KAAK,GAAG,CAAC,CAAC;IACV,SAAS,GAAG,CAAC,CAAC;IAEd,EAAE,EAAE,mBAAmB,EAAE,mBAAmB,CAAC,KAAK,CAAC,OAAO,GAAG,CAAM;IACnE,EAAE,EAAE,cAAc,EAAE,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,CAAM;IACzD,EAAE,EAAE,YAAY,EAAE,YAAY,CAAC,SAAS,GAAG,CAAC;IAE5C,EAAE,EAAE,KAAK,EACP,EAAiC,AAAjC,+BAAiC;UAC1B,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAC5B,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;IAI/B,EAAE,EAAE,KAAK,EAAE,CAAC;QACV,EAAmC,AAAnC,iCAAmC;cAC5B,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAK,CAAC,CAAC,IAAI,IAAI,CAAM;UAAG,CAAC;YACpD,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,GAAK,CAAC,CAAC,IAAI,IAAI,CAAM;;YACxD,KAAK,CAAC,MAAM,CAAC,IAAI;QACnB,CAAC;QAED,EAAa,AAAb,WAAa;QACb,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,eAAe,EAAE,eAAe;QAE/C,EAAc,AAAd,YAAc;QACd,QAAQ,CAAC,GAAG,EAAE,CAAC,EAAE,eAAe,EAAE,eAAe,EAAE,CAAG;IACxD,CAAC;IAED,EAAE,EAAE,MAAM,EAAE,CAAC;QACX,EAAyB,AAAzB,uBAAyB;QACzB,MAAM,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;QAC3B,MAAM,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACvB,CAAC;AACH,CAAC;SAEQ,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,SAAS,EAAE,CAAC;IAChD,KAAK,CAAC,CAAC,GAAG,SAAS,GAAG,KAAK,CAAC,MAAM,CAAE,CAAmC,AAAnC,EAAmC,AAAnC,iCAAmC;IACvE,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK;IACtD,KAAK,CAAC,SAAS,GAAG,SAAS;IAC3B,KAAK,CAAC,IAAI,CAAC,KAAK;AAClB,CAAC;SAEQ,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IACxC,KAAK,CAAC,CAAC,GAAG,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,EAAG,CAAqC,AAArC,EAAqC,AAArC,mCAAqC;IAC/E,KAAK,CAAC,QAAQ,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI;IACxD,SAAS,CAAC,IAAI,CAAC,QAAQ;AACzB,CAAC;SAEQ,WAAW,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC;IAClD,EAAU,AAAV,QAAU;IACV,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,EAAE,SAAS,EAAE,KAAK;IAC9D,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC,YAAY;IACvE,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAAC,KAAK;IAAC,CAAC;IACxD,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ;IAC9C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACzB,KAAK,CAAC,GAAG,CAAC,IAAI;IAEd,EAAW,AAAX,SAAW;IACX,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAC1B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC;IAErD,GAAG,CAAC,IAAI,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAE,CAA6E,AAA7E,EAA6E,AAA7E,2EAA6E;IACvG,IAAI,IAAI,KAAK,GAAG,eAAe,CAAE,CAAsC,AAAtC,EAAsC,AAAtC,oCAAsC;IACvE,IAAI,IAAI,KAAK,GAAG,eAAe,CAAE,CAAsC,AAAtC,EAAsC,AAAtC,oCAAsC;IACvE,KAAK,CAAC,IAAI,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAAC,IAAI;QAAE,KAAK;IAAC,CAAC;IAC5C,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC;IACzB,KAAK,CAAC,OAAO,CAAC,IAAI;IAElB,MAAM,CAAC,CAAC;QACN,OAAO,EAAE,IAAI;QACb,QAAQ,EAAE,IAAI;QACd,KAAK;QACL,KAAK;IACP,CAAC;AACH,CAAC;SAEQ,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;IAC/C,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;IACpC,KAAK,CAAC,QAAQ,GAAG,SAAS,IAAI,CAAG,KAAG,OAAO,GAAG,QAAQ,CAAC,KAAK;IAC5D,KAAK,CAAC,QAAQ,GAAG,SAAS,IAAI,CAAG,KAAG,OAAO,GAAG,QAAQ,CAAC,KAAK;IAE5D,EAAkB,AAAlB,gBAAkB;IAClB,QAAQ,CAAC,KAAK,GAAG,QAAQ;IACzB,QAAQ,CAAC,KAAK,GAAG,QAAQ;IAEzB,EAAuB,AAAvB,qBAAuB;IACvB,QAAQ,CAAC,OAAO,CAAC,KAAK,CAAC,SAAS,IAAI,OAAO,GAAG,IAAI;IAClD,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAK,GAAG,CAAC;IAEjD,EAAwB,AAAxB,sBAAwB;IACxB,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAK,GAAG,CAAC;IAElD,EAAmF,AAAnF,iFAAmF;IACnF,KAAK,CAAC,KAAK,GAAG,GAAG,CAAC,MAAM,CAAC,GAAG,CAC1B,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,SAAS,GAAG,CAAC,EAAE,QAAQ,GAAG,CAAC;IAE3D,QAAQ,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;IAC7B,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,KAAK;AAClC,CAAC;AAED,MAAM,CAAC,gBAAgB,CAAC,CAAW,YAAE,YAAY;AACjD,MAAM,CAAC,gBAAgB,CAAC,CAAY,aAAE,YAAY;AAClD,MAAM,CAAC,gBAAgB,CAAC,CAAS,UAAE,QAAQ,CAAE,KAAK,EAAE,CAAC;IACnD,EAAE,EAAE,KAAK,CAAC,GAAG,IAAI,CAAG,IAAE,CAAC;QACrB,KAAK,CAAC,cAAc;QACpB,YAAY;QACZ,MAAM;IACR,CAAC;IACD,EAAE,EAAE,KAAK,CAAC,GAAG,IAAI,CAAG,MAAI,KAAK,CAAC,GAAG,IAAI,CAAG,IAAE,CAAC;QACzC,KAAK,CAAC,cAAc;QACpB,SAAS;QACT,MAAM;IACR,CAAC;AACH,CAAC;SAEQ,YAAY,GAAG,CAAC;IACvB,EAAE,EAAE,SAAS,EAAE,SAAS;SACnB,iCAAiC;AACxC,CAAC;SAEQ,iCAAiC,GAAG,CAAC;IAC5C,EAAE,EAAE,SAAS,EAAE,MAAM;IAErB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;IACvC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;IAE5C,KAAK,CAAC,SAAS,GAAG,QAAQ,CAAC,SAAS;IAEpC,KAAK,CAAC,IAAI,GAAG,SAAS,IAAI,CAAG,KAAG,QAAQ,CAAC,KAAK,GAAG,QAAQ,CAAC,KAAK;IAC/D,KAAK,CAAC,KAAK,GACT,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS,IACnC,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,SAAS;IAC1C,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK;IACnC,KAAK,CAAC,OAAO,GAAG,IAAI,GAAG,YAAY;IAEnC,EAAE,EAAE,OAAO,GAAG,CAAC,EAAE,CAAC;QAChB,MAAM,CAAC,QAAQ,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;QAErC,EAAW,AAAX,SAAW;QACX,KAAK,CAAC,aAAa,IAAI,OAAO,GAAG,CAAC,GAAG,YAAY,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK;QACxE,KAAK,CAAC,SAAS,GACb,SAAS,IAAI,CAAG,KACZ,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,aAAa,GAC3C,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,KAAK,CAAC,SAAS,GACb,SAAS,IAAI,CAAG,KACZ,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,aAAa,GAC3C,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QACjC,KAAK,CAAC,aAAa,GAAG,SAAS,IAAI,CAAG,KAAG,YAAY,GAAG,QAAQ,CAAC,KAAK;QACtE,KAAK,CAAC,aAAa,GAAG,SAAS,IAAI,CAAG,KAAG,YAAY,GAAG,QAAQ,CAAC,KAAK;QAEtE,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,aAAa,EAAE,aAAa;QAE9D,EAAa,AAAb,WAAa;QACb,KAAK,CAAC,KAAK,GAAG,SAAS,IAAI,CAAG,KAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG;QAClE,KAAK,CAAC,KAAK,GAAG,SAAS,IAAI,CAAG,KAAG,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,GAAG,GAAG;QAClE,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAmD,AAAnD,EAAmD,AAAnD,iDAAmD;QACpF,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAC,KAAK,CAAE,CAAmD,AAAnD,EAAmD,AAAnD,iDAAmD;QACpF,KAAK,CAAC,aAAa,GAAG,SAAS,IAAI,CAAG,KAAG,CAAG,KAAG,CAAG;QAElD,EAAE,EAAE,YAAY,EAAE,YAAY,CAAC,SAAS,GAAG,KAAK,CAAC,MAAM,GAAG,CAAC;QAC3D,QAAQ,CAAC,KAAK,EAAE,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,aAAa;IAC1D,CAAC,MACC,aAAa;AAEjB,CAAC;SAEQ,aAAa,GAAG,CAAC;IACxB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;IAEvC,EAA0D,AAA1D,wDAA0D;IAC1D,WAAW,CACT,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAC3B,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC,EAC3B,QAAQ,CAAC,KAAK,EACd,QAAQ,CAAC,KAAK;IAEhB,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ;IAC9B,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,OAAO;IAE7B,SAAS,GAAG,IAAI;IAChB,EAAE,EAAE,cAAc,KAAK,SAAS,EAAE,cAAc,CAAC,KAAK,CAAC,OAAO,GAAG,CAAM;AACzE,CAAC;SAEQ,SAAS,CAAC,IAAI,EAAE,CAAC;IACxB,EAAE,EAAE,QAAQ,EAAE,CAAC;QACb,KAAK,CAAC,UAAU,GAAG,IAAI,GAAG,QAAQ;QAClC,KAAK,CAAC,KAAK,GAAG,KAAK;QAEnB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;QACvC,KAAK,CAAC,aAAa,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC;QAE5C,EAA8D,AAA9D,4DAA8D;QAC9D,EAAsG,AAAtG,oGAAsG;QACtG,KAAK,CAAC,aAAa,IAChB,SAAS,MACR,SAAS,IACR,SAAS,IACR,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAC1C,aAAa,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAC/C,cAAc;QAExB,EAAE,EAAE,aAAa,EAAE,CAAC;YAClB,EAAwE,AAAxE,sEAAwE;YACxE,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAK,GAAG,UAAU;YACnE,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,KAAK,KAAK,GAAG,UAAU;YAEpE,EAAgE,AAAhE,8DAAgE;YAChE,EAAE,EAAE,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,IAAI,EAAE,EACpD,aAAa;QAEjB,CAAC,MACC,EAAsF,AAAtF,oFAAsF;QACtF,EAA0C,AAA1C,wCAA0C;QAC1C,EAAE,EAAE,SAAS,EAAE,CAAC;YACd,iCAAiC;YACjC,iBAAiB;QACnB,CAAC;QAGH,EAAiC,AAAjC,+BAAiC;QACjC,EAAE,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,GAAG,SAAS,IAAI,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,CAAC,EACxD,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,KAAK,GAAG,UAAU;QAGzC,aAAa,CAAC,UAAU;QACxB,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM;IAC/B,CAAC;IACD,QAAQ,GAAG,IAAI;AACjB,CAAC;SAEQ,aAAa,CAAC,UAAU,EAAE,CAAC;IAClC,KAAK,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,EAAG,CAAyB,AAAzB,EAAyB,AAAzB,uBAAyB;IAExD,EAA8C,AAA9C,4CAA8C;IAC9C,SAAS,CAAC,OAAO,EAAE,OAAO,GAAK,CAAC;QAC9B,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ;QACvD,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,UAAU;IAC7D,CAAC;AACH,CAAC;AAED,MAAM,CAAC,gBAAgB,CAAC,CAAQ,aAAQ,CAAC;IACvC,EAAgB,AAAhB,cAAgB;IAChB,OAAO,CAAC,GAAG,CAAC,CAAQ,SAAE,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW;IAC3D,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC,UAAU,GAAG,MAAM,CAAC,WAAW;IACrD,KAAK,CAAC,KAAK,GAAG,EAAE;IAChB,KAAK,CAAC,MAAM,GAAG,KAAK,GAAG,MAAM;IAE7B,MAAM,CAAC,GAAG,GAAG,MAAM,GAAG,CAAC;IACvB,MAAM,CAAC,MAAM,GAAG,MAAM,GAAG,EAAE;IAE3B,EAAiB,AAAjB,eAAiB;IACjB,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,UAAU,EAAE,MAAM,CAAC,WAAW;IACtD,QAAQ,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM;AAC/B,CAAC","sources":["src/script.js"],"sourcesContent":["\r\nwindow.focus(); // Capture keys--default set to on\r\n\r\nlet camera, scene, renderer; // ThreeJS globals\r\nlet world; // CannonJs world--cannonjs used for physics particles and sims\r\nlet lastTime; // Last timestamp of animation\r\nlet stack; // Parts that stay solid on top of each piece \r\nlet overhangs; // Overhanging parts that fall down\r\nconst boxHeight = 1; // Height of each layer\r\nconst originalBoxSize = 3; // Original width and height of a box\r\nlet autopilot;\r\nlet gameEnded;\r\nlet robotPrecision; // Determines how precise the game is on autopilot\r\n\r\nconst scoreElement = document.getElementById(\"score\");\r\nconst instructionsElement = document.getElementById(\"instructions\");\r\nconst resultsElement = document.getElementById(\"results\");\r\n\r\n//initialize the game\r\ninit();\r\n\r\n// Determines how precise the game is on autopilot\r\nfunction setRobotPrecision() {\r\n  robotPrecision = Math.random() * 1 - 0.5;\r\n}\r\n\r\nfunction init() {\r\n  autopilot = true;\r\n  gameEnded = false;\r\n  lastTime = 0;\r\n  stack = [];\r\n  overhangs = [];\r\n  setRobotPrecision();\r\n\r\n  // Initialize CannonJS\r\n  world = new CANNON.World();\r\n  world.gravity.set(0, -10, 0); // Gravity pulls things down\r\n  world.broadphase = new CANNON.NaiveBroadphase();\r\n  world.solver.iterations = 40;\r\n\r\n  // Initialize ThreeJs\r\n  const aspect = window.innerWidth / window.innerHeight;\r\n  const width = 10;\r\n  const height = width / aspect;\r\n\r\n  camera = new THREE.OrthographicCamera(\r\n    width / -2, // left\r\n    width / 2, // right\r\n    height / 2, // top\r\n    height / -2, // bottom\r\n    0, // near plane\r\n    100 // far plane\r\n  );\r\n\r\n  camera.position.set(4, 4, 4);\r\n  camera.lookAt(0, 0, 0);\r\n\r\n  scene = new THREE.Scene();\r\n\r\n  // Foundation layer of box\r\n  addLayer(0, 0, originalBoxSize, originalBoxSize);\r\n\r\n  // First layer\r\n  addLayer(-10, 0, originalBoxSize, originalBoxSize, \"x\");\r\n\r\n  // Set up lights for our scene\r\n  const ambientLight = new THREE.AmbientLight(0xffffff, 0.6);\r\n  scene.add(ambientLight);\r\n\r\n  const dirLight = new THREE.DirectionalLight(0xffffff, 0.6);\r\n  dirLight.position.set(10, 20, 0);\r\n  scene.add(dirLight);\r\n\r\n  // Set up renderer\r\n  renderer = new THREE.WebGLRenderer({ antialias: true });\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  renderer.setAnimationLoop(animation);\r\n  document.body.appendChild(renderer.domElement);\r\n}\r\n\r\nfunction startGame() {\r\n  autopilot = false;\r\n  gameEnded = false;\r\n  lastTime = 0;\r\n  stack = [];\r\n  overhangs = [];\r\n\r\n  if (instructionsElement) instructionsElement.style.display = \"none\";\r\n  if (resultsElement) resultsElement.style.display = \"none\";\r\n  if (scoreElement) scoreElement.innerText = 0;\r\n\r\n  if (world) {\r\n    // Remove every object from world\r\n    while (world.bodies.length > 0) {\r\n      world.remove(world.bodies[0]);\r\n    }\r\n  }\r\n\r\n  if (scene) {\r\n    // Remove every Mesh from the scene\r\n    while (scene.children.find((c) => c.type == \"Mesh\")) {\r\n      const mesh = scene.children.find((c) => c.type == \"Mesh\");\r\n      scene.remove(mesh);\r\n    }\r\n\r\n    // Foundation\r\n    addLayer(0, 0, originalBoxSize, originalBoxSize);\r\n\r\n    // First layer\r\n    addLayer(-10, 0, originalBoxSize, originalBoxSize, \"x\");\r\n  }\r\n\r\n  if (camera) {\r\n    // Reset camera positions\r\n    camera.position.set(4, 4, 4);\r\n    camera.lookAt(0, 0, 0);\r\n  }\r\n}\r\n\r\nfunction addLayer(x, z, width, depth, direction) {\r\n  const y = boxHeight * stack.length; // Add the new box one layer higher\r\n  const layer = generateBox(x, y, z, width, depth, false);\r\n  layer.direction = direction;\r\n  stack.push(layer);\r\n}\r\n\r\nfunction addOverhang(x, z, width, depth) {\r\n  const y = boxHeight * (stack.length - 1); // Add the new box one the same layer\r\n  const overhang = generateBox(x, y, z, width, depth, true);\r\n  overhangs.push(overhang);\r\n}\r\n\r\nfunction generateBox(x, y, z, width, depth, falls) {\r\n  // ThreeJS\r\n  const geometry = new THREE.BoxGeometry(width, boxHeight, depth);\r\n  const color = new THREE.Color(`hsl(${30 + stack.length * 4}, 100%, 50%)`);\r\n  const material = new THREE.MeshLambertMaterial({ color });\r\n  const mesh = new THREE.Mesh(geometry, material);\r\n  mesh.position.set(x, y, z);\r\n  scene.add(mesh);\r\n\r\n  // CannonJS\r\n  const shape = new CANNON.Box(\r\n    new CANNON.Vec3(width / 2, boxHeight / 2, depth / 2)\r\n  );\r\n  let mass = falls ? 5 : 0; // If it shouldn't fall then setting the mass to zero will keep it stationary\r\n  mass *= width / originalBoxSize; // Reduce mass proportionately by size\r\n  mass *= depth / originalBoxSize; // Reduce mass proportionately by size\r\n  const body = new CANNON.Body({ mass, shape });\r\n  body.position.set(x, y, z);\r\n  world.addBody(body);\r\n\r\n  return {\r\n    threejs: mesh,\r\n    cannonjs: body,\r\n    width,\r\n    depth\r\n  };\r\n}\r\n\r\nfunction cutBox(topLayer, overlap, size, delta) {\r\n  const direction = topLayer.direction;\r\n  const newWidth = direction == \"x\" ? overlap : topLayer.width;\r\n  const newDepth = direction == \"z\" ? overlap : topLayer.depth;\r\n\r\n  // Update metadata\r\n  topLayer.width = newWidth;\r\n  topLayer.depth = newDepth;\r\n\r\n  // Update ThreeJS model\r\n  topLayer.threejs.scale[direction] = overlap / size;\r\n  topLayer.threejs.position[direction] -= delta / 2;\r\n\r\n  // Update CannonJS model\r\n  topLayer.cannonjs.position[direction] -= delta / 2;\r\n\r\n  // Replace shape to a smaller one (in CannonJS you can't simply just scale a shape)\r\n  const shape = new CANNON.Box(\r\n    new CANNON.Vec3(newWidth / 2, boxHeight / 2, newDepth / 2)\r\n  );\r\n  topLayer.cannonjs.shapes = [];\r\n  topLayer.cannonjs.addShape(shape);\r\n}\r\n\r\nwindow.addEventListener(\"mousedown\", eventHandler);\r\nwindow.addEventListener(\"touchstart\", eventHandler);\r\nwindow.addEventListener(\"keydown\", function (event) {\r\n  if (event.key == \" \") {\r\n    event.preventDefault();\r\n    eventHandler();\r\n    return;\r\n  }\r\n  if (event.key == \"R\" || event.key == \"r\") {\r\n    event.preventDefault();\r\n    startGame();\r\n    return;\r\n  }\r\n});\r\n\r\nfunction eventHandler() {\r\n  if (autopilot) startGame();\r\n  else splitBlockAndAddNextOneIfOverlaps();\r\n}\r\n\r\nfunction splitBlockAndAddNextOneIfOverlaps() {\r\n  if (gameEnded) return;\r\n\r\n  const topLayer = stack[stack.length - 1];\r\n  const previousLayer = stack[stack.length - 2];\r\n\r\n  const direction = topLayer.direction;\r\n\r\n  const size = direction == \"x\" ? topLayer.width : topLayer.depth;\r\n  const delta =\r\n    topLayer.threejs.position[direction] -\r\n    previousLayer.threejs.position[direction];\r\n  const overhangSize = Math.abs(delta);\r\n  const overlap = size - overhangSize;\r\n\r\n  if (overlap > 0) {\r\n    cutBox(topLayer, overlap, size, delta);\r\n\r\n    // Overhang\r\n    const overhangShift = (overlap / 2 + overhangSize / 2) * Math.sign(delta);\r\n    const overhangX =\r\n      direction == \"x\"\r\n        ? topLayer.threejs.position.x + overhangShift\r\n        : topLayer.threejs.position.x;\r\n    const overhangZ =\r\n      direction == \"z\"\r\n        ? topLayer.threejs.position.z + overhangShift\r\n        : topLayer.threejs.position.z;\r\n    const overhangWidth = direction == \"x\" ? overhangSize : topLayer.width;\r\n    const overhangDepth = direction == \"z\" ? overhangSize : topLayer.depth;\r\n\r\n    addOverhang(overhangX, overhangZ, overhangWidth, overhangDepth);\r\n\r\n    // Next layer\r\n    const nextX = direction == \"x\" ? topLayer.threejs.position.x : -10;\r\n    const nextZ = direction == \"z\" ? topLayer.threejs.position.z : -10;\r\n    const newWidth = topLayer.width; // New layer has the same size as the cut top layer\r\n    const newDepth = topLayer.depth; // New layer has the same size as the cut top layer\r\n    const nextDirection = direction == \"x\" ? \"z\" : \"x\";\r\n\r\n    if (scoreElement) scoreElement.innerText = stack.length - 1;\r\n    addLayer(nextX, nextZ, newWidth, newDepth, nextDirection);\r\n  } else {\r\n    missedTheSpot();\r\n  }\r\n}\r\n\r\nfunction missedTheSpot() {\r\n  const topLayer = stack[stack.length - 1];\r\n\r\n  // Turn to top layer into an overhang and let it fall down\r\n  addOverhang(\r\n    topLayer.threejs.position.x,\r\n    topLayer.threejs.position.z,\r\n    topLayer.width,\r\n    topLayer.depth\r\n  );\r\n  world.remove(topLayer.cannonjs);\r\n  scene.remove(topLayer.threejs);\r\n\r\n  gameEnded = true;\r\n  if (resultsElement && !autopilot) resultsElement.style.display = \"flex\";\r\n}\r\n\r\nfunction animation(time) {\r\n  if (lastTime) {\r\n    const timePassed = time - lastTime;\r\n    const speed = 0.008;\r\n\r\n    const topLayer = stack[stack.length - 1];\r\n    const previousLayer = stack[stack.length - 2];\r\n\r\n    // The top level box should move if the game has not ended AND\r\n    // it's either NOT in autopilot or it is in autopilot and the box did not yet reach the robot position\r\n    const boxShouldMove =\r\n      !gameEnded &&\r\n      (!autopilot ||\r\n        (autopilot &&\r\n          topLayer.threejs.position[topLayer.direction] <\r\n            previousLayer.threejs.position[topLayer.direction] +\r\n              robotPrecision));\r\n\r\n    if (boxShouldMove) {\r\n      // Keep the position visible on UI and the position in the model in sync\r\n      topLayer.threejs.position[topLayer.direction] += speed * timePassed;\r\n      topLayer.cannonjs.position[topLayer.direction] += speed * timePassed;\r\n\r\n      // If the box went beyond the stack then show up the fail screen\r\n      if (topLayer.threejs.position[topLayer.direction] > 10) {\r\n        missedTheSpot();\r\n      }\r\n    } else {\r\n      // If it shouldn't move then is it because the autopilot reached the correct position?\r\n      // Because if so then next level is coming\r\n      if (autopilot) {\r\n        splitBlockAndAddNextOneIfOverlaps();\r\n        setRobotPrecision();\r\n      }\r\n    }\r\n\r\n    // 4 is the initial camera height\r\n    if (camera.position.y < boxHeight * (stack.length - 2) + 4) {\r\n      camera.position.y += speed * timePassed;\r\n    }\r\n\r\n    updatePhysics(timePassed);\r\n    renderer.render(scene, camera);\r\n  }\r\n  lastTime = time;\r\n}\r\n\r\nfunction updatePhysics(timePassed) {\r\n  world.step(timePassed / 1000); // Step the physics world\r\n\r\n  // Copy coordinates from Cannon.js to Three.js\r\n  overhangs.forEach((element) => {\r\n    element.threejs.position.copy(element.cannonjs.position);\r\n    element.threejs.quaternion.copy(element.cannonjs.quaternion);\r\n  });\r\n}\r\n\r\nwindow.addEventListener(\"resize\", () => {\r\n  // Adjust camera\r\n  console.log(\"resize\", window.innerWidth, window.innerHeight);\r\n  const aspect = window.innerWidth / window.innerHeight;\r\n  const width = 10;\r\n  const height = width / aspect;\r\n\r\n  camera.top = height / 2;\r\n  camera.bottom = height / -2;\r\n\r\n  // Reset renderer\r\n  renderer.setSize(window.innerWidth, window.innerHeight);\r\n  renderer.render(scene, camera);\r\n});\r\n"],"names":[],"version":3,"file":"index.44983732.js.map","sourceRoot":"/__parcel_source_root/"}